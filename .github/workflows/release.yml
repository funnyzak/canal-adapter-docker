name: release
on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      version:
        description: 'set canal version, the version must be the same as the canal tag'
        required: true
        default: ''
jobs:
  docker-release:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        image: [ 'canal-adapter', 'canal-server', 'canal-admin' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set Variables
        run: |
          echo "CANAL_COMPONENT_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "DOCKER_ARG_BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
          echo "DOCKER_ARG_COMPONENT_NAME=${{ matrix.image }}" >> $GITHUB_ENV
          echo "DOCKER_ARG_DOWNLOAD_NAME=${{ matrix.image }}" | tr '-' '.' >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME=funnyzak/${{ matrix.image }}" >> $GITHUB_ENV
      - name: Get component version from input
        if: ${{ github.event.inputs.version != '' }}
        run: |
          echo "CANAL_COMPONENT_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Set canal server download name
        if: ${{ matrix.image == 'canal-server' }}
        run: |
          echo "DOCKER_ARG_DOWNLOAD_NAME=canal.deployer" >> $GITHUB_ENV
      - name : Echo Variables
        run: |
          echo "CANAL_COMPONENT_VERSION=${{ env.CANAL_COMPONENT_VERSION }}"
          echo "DOCKER_ARG_BUILD_DATE=${{ env.DOCKER_ARG_BUILD_DATE }}"
          echo "DOCKER_ARG_DOWNLOAD_NAME=${{ env.DOCKER_ARG_DOWNLOAD_NAME }}"
          echo "DOCKER_ARG_COMPONENT_NAME=${{ env.DOCKER_ARG_COMPONENT_NAME }}"
          echo "DOCKER_IMAGE_NAME=${{ env.DOCKER_IMAGE_NAME }}"
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            CANAL_DOWNLOAD_NAME=${{ env.DOCKER_ARG_DOWNLOAD_NAME }}
            CANAL_COMPONENT_NAME=${{ env.DOCKER_ARG_COMPONENT_NAME }}
            CANAL_COMPONENT_VERSION=${{ env.CANAL_COMPONENT_VERSION }}
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ env.DOCKER_ARG_BUILD_DATE }}
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.CANAL_COMPONENT_VERSION }}
            ${{ env.DOCKER_IMAGE_NAME }}:latest
          platforms: linux/amd64
  push-message:
    name: Push message
    runs-on: ubuntu-latest
    needs: [docker-release]
    steps:
      - name: Push message
        uses: funnyzak/pushoo-action@main
        with:
          platforms: ifttt,wecombot,bark
          tokens: ${{ secrets.PUSH_TOKEN }}
          content: |
            # ${{ github.event.repository.name }} Docker Build Success
            ## trigger: ${{ github.event_name }} at ${{ github.event.head_commit.timestamp }}
            ## commit message: ${{ github.event.head_commit.message }}
            ## commit url: ${{ github.event.head_commit.url }}
            ## commit author: ${{ github.event.head_commit.author.name }}
            ## commit email: ${{ github.event.head_commit.author.email }}
            ## commit id: ${{ github.event.head_commit.id }}
          title: |
            ${{ github.repository }} ${{ github.event_name }} Message
          options: '{"bark": { "url": "https://github.com/${{github.repository}}" }}'
          debug: false
